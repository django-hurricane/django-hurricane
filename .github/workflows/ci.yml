name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  codeclimate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install project
      run: poetry install --no-interaction
    - name: Check code climate
      run: |
        poetry run flake8
        poetry run black --check .
        poetry run isort --check .
  test:
    name: Run unit and integration tests with coverage
    needs: codeclimate
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:  
        python-version: [ "3.9", "3.10", "3.11" ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Test with django tests
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 12
        max_attempts: 3
        command: |
          poetry run coverage run manage.py test

    - name: Combine coverage
      run: |
        poetry run coverage combine

    - name: Upload coverage data to coveralls.io
      # https://coveralls-python.readthedocs.io/en/latest/usage/configuration.html#configuration
      # need COVERALLS_REPO_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: |
        poetry run coveralls --service=github

  coveralls:
    name: Indicate completion to coveralls.io
    # need secrets.GITHUB_TOKEN
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  load_test:
    name: Run load test with Locust
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install project
      run: poetry install --no-interaction
    - name: Run hurricane test server & locust load testing
      run: |
        nohup poetry run python manage.py serve > /dev/null 2>&1 & poetry run locust --headless -u 25 -r 5 --host http://localhost:8000 --run-time 2m
      